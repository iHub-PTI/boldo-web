
import axios from "axios"
import React, { useState, useEffect } from 'react'
import { useRouteMatch } from "react-router-dom"
import {
    Grid,
    Typography,
} from '@material-ui/core';
import MaterialTable from "material-table";

export function LaboratoryMenu(props) {
    const { appointment } = props;
    const [initialLoad, setInitialLoad] = useState(true)
    const [selectedRow, setSelectedRow] = useState()
    const [studiesData, setStudiesData] = useState([])
    useEffect(() => {
        const load = async () => {
            try {

                if (props.appointment.patientId !== null) {
                    const res = await axios.get(`/profile/doctor/diagnosticReports?patient_id=${props.appointment.patientId}`)
                    setStudiesData(res.data.items)
                }
            } catch (err) {
                console.log(err)
            } finally {
                setInitialLoad(false)
            }
        }

        load()
        // eslint-disable-next-line react-hooks/exhaustive-deps
    }, [appointment])
    if (initialLoad)
        return (
            <div style={{ width: '300px' }} className='flex items-center justify-center w-full h-full py-64'>
                <div className='flex items-center justify-center w-12 h-12 mx-auto bg-gray-100 rounded-full'>
                    <svg
                        className='w-6 h-6 text-secondary-500 animate-spin'
                        xmlns='http://www.w3.org/2000/svg'
                        fill='none'
                        viewBox='0 0 24 24'
                    >
                        <circle className='opacity-25' cx='12' cy='12' r='10' stroke='currentColor' strokeWidth='2'></circle>
                        <path
                            className='opacity-75'
                            fill='currentColor'
                            d='M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z'
                        ></path>
                    </svg>
                </div>
            </div>
        )
    return (
        <div className='flex flex-col h-full overflow-y-scroll bg-white shadow-xl'>
            <Grid>

                <Grid className='w-full px-8 mt-10'>
                    <Grid>
                        <Typography variant='h5' color='textPrimary'>
                            Resultados de estudios
                        </Typography>
                        <Typography variant='body2' color='textSecondary'>
                            Archivos clinicos subidos
                        </Typography>
                    </Grid>


                    <Grid className="mt-10">
                        <MaterialTable
                            columns={[

                                // {
                                //     title: "Cagtegoria",
                                //     field: "mainReason"
                                // },
                                {
                                    title: 'Categoria',
                                    field: 'category',
                                    render: rowData => {
                                        // console.log(rowData.diagnosis)
                                        //@ts-ignore
                                        return (
                                            rowData.category !== null ?
                                                <Grid container>
                                                    {rowData.category === "LABORATORY" ? <svg width="20" height="27" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                        <path fill-rule="evenodd" clip-rule="evenodd" d="M1.5 0C0.671575 0 0 0.671575 0 1.5V16.5C0 17.3285 0.671575 18 1.5 18H16.5C17.3285 18 18 17.3285 18 16.5V1.5C18 0.671575 17.3285 0 16.5 0H1.5ZM7.4 5L11.1 5.0001V5.50005C11.1 5.64275 11.2113 5.86065 11.4246 6.10185C11.5197 6.20935 11.6162 6.30055 11.6896 6.3651C11.7259 6.39705 11.7557 6.4217 11.7755 6.43775C11.7854 6.44575 11.7928 6.45155 11.7972 6.45495L11.8012 6.45805L12 6.60795V7.5H11V7.0901C10.9084 7.008 10.7926 6.89675 10.6755 6.76425C10.5165 6.58455 10.3117 6.31795 10.1942 6L8.27235 6.00005C8.2465 6.05495 8.21945 6.10535 8.19405 6.15C8.0917 6.33005 7.96165 6.50825 7.84125 6.6596C7.71925 6.8129 7.5985 6.94935 7.5089 7.0469L7.5 7.0566V12.75C7.5 13.7165 8.2835 14.5 9.25 14.5C9.9481 14.5 10.5508 14.0913 10.8316 13.5H11.8965C11.57 14.6543 10.5088 15.5 9.25 15.5C7.7312 15.5 6.5 14.2688 6.5 12.75V6.65085L6.64535 6.50475L6.6467 6.50335L6.6527 6.4972C6.6583 6.4915 6.6669 6.4827 6.67805 6.47105C6.70045 6.44775 6.733 6.4134 6.77235 6.37055C6.8515 6.28435 6.95575 6.16635 7.05875 6.0369C7.1633 5.9055 7.2583 5.77265 7.3247 5.65585C7.3762 5.5652 7.3925 5.5151 7.39765 5.4993C7.39885 5.4955 7.39945 5.4937 7.39975 5.49375C7.3998 5.49375 7.3997 5.4936 7.39975 5.49375C7.39975 5.49385 7.39995 5.4943 7.39995 5.4945L7.4 5.4966V5ZM13 11.0455C13 11.8488 12.3285 12.5 11.5 12.5C10.6715 12.5 10 11.8488 10 11.0455C10 9.77275 11.5 8.5 11.5 8.5C11.5 8.5 13 9.77275 13 11.0455ZM11.5 2H7V4H11.5V2Z" fill="#364152" />
                                                    </svg>
                                                        : rowData.category === "IMAGE" ? <svg width="20" height="27" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                            <path fill-rule="evenodd" clip-rule="evenodd" d="M0 1.5C0 0.671575 0.671575 0 1.5 0H16.5C17.3285 0 18 0.671575 18 1.5V16.5C18 17.3285 17.3285 18 16.5 18H1.5C0.671575 18 0 17.3285 0 16.5V1.5ZM11.25 4.25C11.25 5.49265 10.2427 6.5 9 6.5C7.75735 6.5 6.75 5.49265 6.75 4.25C6.75 3.00735 7.75735 2 9 2C10.2427 2 11.25 3.00735 11.25 4.25ZM3.5 8C3.5 7.72385 3.72385 7.5 4 7.5H14C14.2761 7.5 14.5 7.72385 14.5 8V15.5C14.5 15.7761 14.2761 16 14 16H11.5C11.5 15.7014 11.3637 15.4302 11.2149 15.2219C11.0595 15.0043 10.8519 14.801 10.6249 14.6276C10.3106 14.3876 9.91265 14.1706 9.5 14.066V12.5732H10.2C10.6954 12.5732 11.3186 12.7711 11.8559 12.9974C12.1164 13.1072 12.3421 13.2172 12.5023 13.2997C12.5823 13.3409 12.6455 13.3749 12.688 13.3983C12.7093 13.41 12.7254 13.419 12.7358 13.4249L12.747 13.4313L12.7493 13.4326C12.7493 13.4326 12.7494 13.4326 13 13C13.2506 12.5674 13.2506 12.5673 13.2505 12.5673L13.2498 12.5668L13.2484 12.566L13.2437 12.5634L13.2278 12.5543C13.2141 12.5466 13.1946 12.5357 13.1698 12.522C13.1201 12.4947 13.0489 12.4564 12.9601 12.4107C12.7829 12.3194 12.5335 12.1977 12.2441 12.0758C11.6814 11.8388 10.9045 11.5732 10.2 11.5732H9.5V10.5H9.9C10.2744 10.5 10.7423 10.6073 11.1425 10.7285C11.337 10.7875 11.5054 10.8465 11.6248 10.8907C11.6843 10.9128 11.7313 10.931 11.7628 10.9434C11.7746 10.9481 11.7842 10.952 11.7914 10.955C11.7939 10.9559 11.7961 10.9568 11.798 10.9576L11.8062 10.9609L11.8078 10.9616C11.8078 10.9616 11.8077 10.9615 12 10.5C12.1923 10.0385 12.1923 10.0384 12.1922 10.0384L12.1904 10.0377L12.1868 10.0362L12.1746 10.0312C12.1642 10.027 12.1494 10.021 12.1306 10.0135C12.093 9.9987 12.0391 9.97785 11.9721 9.953C11.8383 9.90345 11.6504 9.83755 11.4325 9.7715C11.0077 9.64275 10.4255 9.5 9.9 9.5H9.5V8.5H8.5V9.5H7.95C7.3498 9.5 6.80385 9.642 6.4157 9.7782C6.21975 9.84695 6.05925 9.91595 5.94615 9.9685C5.88955 9.99485 5.8445 10.0172 5.81255 10.0336C5.7966 10.0418 5.78385 10.0485 5.7746 10.0534L5.76325 10.0596L5.75955 10.0616L5.7582 10.0624L5.75765 10.0626C5.75755 10.0627 5.7572 10.0629 6 10.5C6.2428 10.9371 6.2427 10.9371 6.2426 10.9372L6.24615 10.9353C6.25055 10.9329 6.2582 10.9289 6.2689 10.9234C6.29025 10.9124 6.32375 10.8957 6.3679 10.8752C6.4564 10.834 6.5865 10.778 6.7468 10.7218C7.07115 10.608 7.5002 10.5 7.95 10.5H8.5V11.5732H7.6C6.79525 11.5732 6.06735 11.8377 5.5558 12.0872C5.297 12.2134 5.0857 12.3397 4.9379 12.4353C4.8638 12.4832 4.8052 12.5237 4.76405 12.5531C4.74345 12.5677 4.7272 12.5796 4.7155 12.5883L4.70145 12.5989L4.697 12.6023L4.6955 12.6034L4.69485 12.6039C4.69475 12.604 4.6944 12.6043 5 13C5.3056 13.3957 5.3055 13.3958 5.3054 13.3959L5.3121 13.3909C5.3187 13.386 5.3296 13.378 5.34455 13.3673C5.3745 13.346 5.42055 13.314 5.48085 13.275C5.6018 13.1969 5.778 13.0915 5.9942 12.986C6.43265 12.7722 7.00475 12.5732 7.6 12.5732H8.5V14.0822C8.08535 14.195 7.68465 14.4073 7.36335 14.6492C7.139 14.8181 6.93385 15.0158 6.78025 15.2299C6.6319 15.4367 6.5 15.7035 6.5 16H4C3.72385 16 3.5 15.7761 3.5 15.5V8ZM10.4852 15.9495C10.4978 15.9809 10.4997 15.9972 10.5 16H7.5C7.50005 15.9988 7.50095 15.983 7.5139 15.9504C7.5278 15.9154 7.55255 15.8689 7.5928 15.8127C7.67425 15.6992 7.80115 15.5712 7.9648 15.448C8.2939 15.2002 8.6948 15.0281 9.0169 15.0002C9.2937 15.0065 9.6797 15.1641 10.018 15.4224C10.1838 15.549 10.3155 15.6832 10.4011 15.8031C10.4436 15.8625 10.4701 15.912 10.4852 15.9495Z" fill="#364152" />
                                                        </svg>
                                                            : <svg width="20" height="22" viewBox="0 0 20 27" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                                <path fill-rule="evenodd" clip-rule="evenodd" d="M6.75 0C5.68485 0 4.82143 0.863421 4.82143 1.92857H1.92857C0.863421 1.92857 0 2.79199 0 3.85714V25.0714C0 26.1366 0.863421 27 1.92857 27H17.3571C18.4223 27 19.2857 26.1366 19.2857 25.0714V3.85714C19.2857 2.79199 18.4223 1.92857 17.3571 1.92857H14.4643C14.4643 0.863421 13.6009 0 12.5357 0H6.75ZM6.75 1.92857H12.5357V3.85714H6.75V1.92857ZM10.1802 17.3571L7.77581 23.7687C7.58883 24.2673 7.84148 24.8231 8.34011 25.0101C8.83874 25.1972 9.39455 24.9445 9.58163 24.4458L10.795 21.2099H13.3124L14.5258 24.4458C14.7128 24.9445 15.2686 25.1972 15.7672 25.0101C16.266 24.8231 16.5186 24.2673 16.3316 23.7687L13.9273 17.3571H16.6834C17.216 17.3571 17.6477 16.9254 17.6477 16.3929C17.6477 15.8603 17.216 15.4286 16.6834 15.4286H12.5541C12.5419 15.4284 12.5295 15.4284 12.5173 15.4286H11.59C11.5778 15.4284 11.5655 15.4284 11.5533 15.4286H6.75019C6.21771 15.4286 5.78591 15.8603 5.78591 16.3929C5.78591 16.9254 6.21771 17.3571 6.75019 17.3571H10.1802ZM16.3929 8.91H2.89286V6.98143H16.3929V8.91ZM2.89286 12.9214H7.71429V10.9929H2.89286V12.9214ZM13.9821 12.5357C13.9821 13.6009 13.1187 14.4643 12.0536 14.4643C10.9884 14.4643 10.125 13.6009 10.125 12.5357C10.125 11.4706 10.9884 10.6071 12.0536 10.6071C13.1187 10.6071 13.9821 11.4706 13.9821 12.5357Z" fill="#364152" />
                                                            </svg>


                                                    }
                                                    <p style={{ marginLeft: '10px' }}> </p> {rowData.category}
                                                </Grid> : <>vacio</>
                                        )

                                    },
                                },

                                {
                                    title: "Fecha",
                                    field: "effectiveDate",
                                    width: "10%"
                                },
                                // {
                                //   title: "Diagnóstico",
                                //   field: "diagnosis"
                                // },
                                {
                                    title: 'Descripción',
                                    field: 'description',
                                    render: rowData => {
                                        // console.log(rowData.diagnosis)
                                        //@ts-ignore
                                        return (
                                            <Grid container>
                                                <p style={{ marginTop: '3px' }}></p> {rowData.description !== null && rowData.description}
                                            </Grid>
                                        )
                                    },
                                },
                                {
                                    title: "Fuente",
                                    field: "source",

                                },

                            ]}
                            data={studiesData}
                            onRowClick={(evt, selectedRow) =>
                                //@ts-ignore
                                setSelectedRow(selectedRow)
                            }
                            options={{
                                search: false,

                                toolbar: false,
                                paging: false,
                                draggable: false,

                                rowStyle: (rowData) => ({
                                    backgroundColor:
                                        // @ts-ignore
                                        selectedRow !== undefined && selectedRow.id === rowData.id ? "#D4F2F3" : "#FFF",
                                }),
                            }}
                        />

                    </Grid>
                </Grid>
            </Grid>

        </div>
    )
}