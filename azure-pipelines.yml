# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- dev
- test
- main

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '2e338b60-32fc-4c9e-a0b8-d458e04b4432'
  imageRepository: 'ihubptiboldoweb'
  containerRegistry: 'fhirservertest.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
#    - task: Docker@2
#      displayName: Build and push an image to container registry
#      inputs:
#        command: buildAndPush
#        repository: $(imageRepository)
#        dockerfile: $(dockerfilePath)
#        containerRegistry: $(dockerRegistryServiceConnection)
#        tags: |
#          $(tag)
    - task: Docker@2
      displayName: Docker build dev
      condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/dev'))
      inputs:
        containerRegistry: $(dockerRegistryServiceConnection)
        repository: $(imageRepository)
        command: 'build'
        Dockerfile: '**/Dockerfile'
        arguments: '--build-arg sockets_address=https://boldo-dev.pti.org.py --build-arg app_server=https://boldo-dev.pti.org.py/api --build-arg app_sentry=https://b37813a7e56e452f8a93d69f01439f72@o1301148.ingest.sentry.io/4504095428771840'
    
    - task: Docker@2
      displayName: Docker build test
      condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/test'))
      inputs:
        containerRegistry: $(dockerRegistryServiceConnection)
        repository: $(imageRepository)
        command: 'build'
        Dockerfile: '**/Dockerfile'
        arguments: '--build-arg sockets_address=https://boldo-test.pti.org.py --build-arg app_server=https://boldo-test.pti.org.py/api --build-arg app_sentry=https://ef0e91d5dac44ca68696e90914f939b4@o489142.ingest.sentry.io/5550906'

    - task: Docker@2
      displayName: Docker build prod
      condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
      inputs:
        containerRegistry: $(dockerRegistryServiceConnection)
        repository: $(imageRepository)
        command: 'build'
        Dockerfile: '**/Dockerfile'
        arguments: '--build-arg sockets_address=https://bol.do --build-arg app_server=https://bol.do/api --build-arg app_sentry=https://ef0e91d5dac44ca68696e90914f939b4@o489142.ingest.sentry.io/5550906'

    - task: Docker@2
      displayName: Docker push
      inputs:
        containerRegistry: $(dockerRegistryServiceConnection)
        repository: $(imageRepository)
        command: 'push'

    - task: Kubernetes@1
      displayName: Deploy to healthcore-dev
      condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/dev'))
      inputs:
        connectionType: 'Kubernetes Service Connection'
        kubernetesServiceEndpoint: 'healthcore-dev'
        namespace: 'healthcore-dev'
        command: 'set'
        arguments: 'image deployment/boldo-web boldo-web=fhirservertest.azurecr.io/ihubptiboldoweb:$(Build.BuildId)'
        secretType: 'dockerRegistry'
        containerRegistryType: 'Azure Container Registry'
    
    - task: Kubernetes@1
      displayName: Deploy to healthcore-test
      condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/test'))
      inputs:
        connectionType: 'Kubernetes Service Connection'
        kubernetesServiceEndpoint: 'healthcore-test'
        namespace: 'healthcore-test'
        command: 'set'
        arguments: 'image deployment/boldo-web boldo-web=fhirservertest.azurecr.io/ihubptiboldoweb:$(Build.BuildId)'
        secretType: 'dockerRegistry'
        containerRegistryType: 'Azure Container Registry'
    
    - task: Kubernetes@1
      displayName: Deploy to healthcore-prod
      condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
      inputs:
        connectionType: 'Kubernetes Service Connection'
        kubernetesServiceEndpoint: 'heathcore-prod'
        namespace: 'healthcore-prod'
        command: 'set'
        arguments: 'image deployment/boldo-web boldo-web=fhirservertest.azurecr.io/ihubptiboldoweb:$(Build.BuildId)'
        secretType: 'dockerRegistry'
        containerRegistryType: 'Azure Container Registry'
